# .github/workflows/deploy.yml

name: Deploy to Production Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 步骤 1: 检出代码
      - name: Checkout Code
        uses: actions/checkout@v4

      # 步骤 2: 设置 SSH
      - name: Setup SSH Agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # 步骤 3: 在服务器上执行 git 部署命令
      - name: Execute Git Deployment Commands on Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # 严格模式：任何命令失败则立即退出
            set -e

            # 进入项目目录
            cd ${{ secrets.REMOTE_PATH }}
            echo "Project Directory: $(pwd)"

            echo "--- Pulling Latest Code ---"
            # 拉取最新代码
            git fetch origin main
            git reset --hard origin/main
            git clean -fd

            echo "--- Checking Docker & Docker Compose ---"
            docker --version
            
            # 更稳健地自动检测 docker compose (v2) 或 docker-compose (v1)
            if docker compose version &> /dev/null; then
                COMPOSE_COMMAND="docker compose"
            else
                COMPOSE_COMMAND="docker-compose"
            fi
            
            echo "Using compose command: '$COMPOSE_COMMAND'"
            $COMPOSE_COMMAND --version

            echo "--- Deploying Application ---"
            echo "Building new Docker images..."
            # 构建所有服务
            $COMPOSE_COMMAND build

            echo "Stopping and removing old containers..."
            $COMPOSE_COMMAND down

            echo "Starting new containers..."
            $COMPOSE_COMMAND up -d

            echo "--- Verifying Running Containers ---"
            # 等待几秒钟让容器有时间启动
            sleep 5 
            $COMPOSE_COMMAND ps

            echo "--- Deployment Successful ---"
