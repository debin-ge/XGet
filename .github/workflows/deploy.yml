# .github/workflows/deploy.yml

name: Deploy to Production Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 步骤 1: 检出代码
      - name: Checkout Code
        uses: actions/checkout@v4

      # 步骤 2: 设置 SSH
      - name: Setup SSH Agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # 步骤 3: 运行一个极简的 rsync 命令进行测试
      - name: Sync Files to Server via rsync (Simplified)
        run: |
          echo "Attempting a minimal rsync to ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.REMOTE_PATH }}"
          # 我们移除了所有额外参数，只保留核心功能，用于测试连接和路径是否正确
          rsync -avz -e "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" \
            ./ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.REMOTE_PATH }}

      # 步骤 4: 在服务器上执行部署命令 (如果上一步成功)
      - name: Execute Deployment Commands on Server
        if: success()
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.REMOTE_PATH }}
            COMPOSE_COMMAND="docker compose"
            if ! command -v $COMPOSE_COMMAND &> /dev/null; then
              COMPOSE_COMMAND="docker-compose"
            fi
            echo "Using compose command: $COMPOSE_COMMAND"
            echo "Building new Docker images..."
            $COMPOSE_COMMAND build --no-cache
            echo "Stopping and removing old containers..."
            $COMPOSE_COMMAND down
            echo "Starting new containers..."
            $COMPOSE_COMMAND up -d
            echo "Pruning unused Docker images..."
            docker image prune -f