
# .github/workflows/deploy.yml

name: Deploy to Production Server

# 触发器：当代码推送到 main 分支时触发
on:
  push:
    branches:
      - main

jobs:
  deploy:
    # 运行环境：使用最新的 Ubuntu
    runs-on: ubuntu-latest

    steps:
      # 步骤 1: 检出代码
      # 拉取仓库的最新代码到 Actions 的工作区
      - name: Checkout Code
        uses: actions/checkout@v4

      # 步骤 2: 同步文件到服务器
      # 使用 rsync 将代码高效地传输到目标服务器
      - name: Sync Files to Server
        uses: burnett01/rsync-deploy@v6
        with:
          # SSH 私钥，用于连接服务器
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          # 远程服务器的主机名或 IP 地址
          REMOTE_HOST: ${{ secrets.SSH_HOST }}
          # 远程服务器的登录用户名
          REMOTE_USER: ${{ secrets.SSH_USER }}
          # 源目录，"." 表示当前仓库的根目录
          SOURCE: "./"
          # 目标目录，在服务器上的绝对路径
          REMOTE_TARGET: ${{ secrets.REMOTE_PATH }}
          # rsync 排除项，避免不必要的文件传输
          EXCLUDE: |
            .git*
            .github/
            .idea/
            .vscode/
            *.md
            node_modules/
            .env.development

      # 步骤 3: 在服务器上执行部署命令
      # 通过 SSH 连接到服务器，并执行 Docker Compose 命令
      - name: Execute Deployment Commands on Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # 进入项目目录
            cd ${{ secrets.REMOTE_PATH }}

            # 确保 docker-compose 或 docker compose 命令可用
            # 优先使用 "docker compose" (v2)，如果失败则尝试 "docker-compose" (v1)
            COMPOSE_COMMAND="docker compose"
            if ! command -v $COMPOSE_COMMAND &> /dev/null; then
              COMPOSE_COMMAND="docker-compose"
            fi

            # 输出使用的命令
            echo "Using compose command: $COMPOSE_COMMAND"

            # 构建新的 Docker 镜像（--no-cache 可以确保最新构建）
            echo "Building new Docker images..."
            $COMPOSE_COMMAND build --no-cache

            # 停止并删除旧的容器、网络
            echo "Stopping and removing old containers..."
            $COMPOSE_COMMAND down

            # 启动新的容器（-d 表示在后台运行）
            echo "Starting new containers..."
            $COMPOSE_COMMAND up -d

            # 清理不再使用的 Docker 镜像（可选，但推荐）
            echo "Pruning unused Docker images..."
            docker image prune -f
